<form class="color-picker">
  <fieldset>
    <label for="üíª"><svg alt="system settings" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
        <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v7A1.5 1.5 0 0 0 1.5 10H6v1H1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-5v-1h4.5A1.5 1.5 0 0 0 16 8.5v-7A1.5 1.5 0 0 0 14.5 0zm0 1h13a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5M12 12.5a.5.5 0 1 1 1 0 .5.5 0 0 1-1 0m2 0a.5.5 0 1 1 1 0 .5.5 0 0 1-1 0M1.5 12h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1M1 14.25a.25.25 0 0 1 .25-.25h5.5a.25.25 0 1 1 0 .5h-5.5a.25.25 0 0 1-.25-.25" />
      </svg></label>
    <input type="radio" name="theme" value="üíª" id="üíª" checked>
    <label for="‚òÄÔ∏è"><svg alt="light mode" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
        <path d="M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708" />
      </svg></label>
    <input type="radio" name="theme" value="‚òÄÔ∏è" id="‚òÄÔ∏è">
    <label for="üåë"><svg alt="dark mode" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
        <path d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278" />
      </svg></label>
    <input type="radio" name="theme" value="üåë" id="üåë">
  </fieldset>
</form>





:root {
  @media (prefers-color-scheme: light) {
    --theme: ‚òÄÔ∏è;
    color-scheme: light;
  }

  @media (prefers-color-scheme: dark) {
    --theme: üåë;
    color-scheme: dark;
  }
}
@supports (selector(::view-transition)) {
  .support.view-transition {
    display: none;
  }
}
@container not style(--theme: ü•î) {
  .support.style-query {
    display: none;
  }
}

.support {
  background-color: var(--clr-warn-1);
  border-inline-start: 0.5rem solid var(--clr-warn-2);
  color: var(--clr-warn-text);
  border-radius: 0.5rem;
  padding: 1em 2em;
}

::view-transition {
  background: #555;
}
::view-transition-image-pair(root) {
  perspective: 2500px;
  perspective-origin: center;
  transform-style: preserve-3d;
  transform-origin: 50% 50% 100vw;
  filter: drop-shadow(0px 0px 6px hsl(165deg 11% 3%))
    drop-shadow(0px 0px 25px hsl(165deg 11% 3%/50%));
}
::view-transition-old(root),
::view-transition-new(root) {
  animation: 1.5s
    linear(
      0,
      0.324 9.1%,
      0.584 18.6%,
      0.782 28.6%,
      0.858 33.8%,
      0.92 39.2%,
      0.997 49.5%,
      1.021 55.1%,
      1.033 61%,
      1.035 71.7%,
      1
    );
  transform-style: preserve-3d;
  transform-origin: 50% 50% 0;
  /*   perspective: 800px; */
  transform: translateZ(-50vw) scale(var(--scale)) rotatey(var(--rotation))
    translatez(50vw);
  backface-visibility: hidden;
}
::view-transition-old(root) {
  animation-name: reveal-out;
}
::view-transition-new(root) {
  animation-name: reveal-in;
}

@property --rotation {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}
@property --scale {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

@keyframes reveal-in {
  from {
    --rotation: -90deg;
    animation-timing-function: ease-in-out;
  }
  15% {
    --scale: 0.8;
    --rotation: -90deg;
  }
  85% {
    --scale: 0.8;
    --rotation: 0deg;
    animation-timing-function: ease-in-out;
  }
  to {
    --rotation: 0deg;
  }
}
@keyframes reveal-out {
  from {
    --rotation: 0deg;
    animation-timing-function: ease-in-out;
  }
  15% {
    --scale: 0.8;
    --rotation: 0deg;
  }
  85% {
    --scale: 0.8;
    --rotation: 90deg;
    animation-timing-function: ease-in-out;
  }
  to {
    --rotation: 90deg;
  }
}

body {
  color-scheme: light;
  --clr-body-bg: hsl(10, 25%, 95%);
  --clr-card-bg: hsl(10, 25%, 98%);
  --clr-text: #232323;
  --clr-heading: hsl(18, 65%, 48%);
  --clr-warn-2: hsl(34.2, 65.2%, 74.1%);
  --clr-warn-1: hsl(34.2, 45.2%, 84.1%);
  --clr-warn-text: #232323;

  @container style(--theme: üåë) {
    color-scheme: dark;
    --clr-body-bg: hsl(173, 10%, 7%);
    --clr-card-bg: hsl(173, 30%, 10%);
    --clr-text: #cbd5e1;
    --clr-heading: hsl(173, 50%, 70%);
    --clr-warn-2: hsl(34.2, 65.2%, 74.1%);
    --clr-warn-1: hsl(34.2, 45.2%, 84.1%);
  }
}

body {
  font-family: system-ui, sans-serif;
  font-size: 1.25rem;
  line-height: 1.5;
  background: var(--clr-body-bg);
  color: var(--clr-text);
}

h1,
h3 {
  color: var(--clr-heading);
  line-height: 1.1;
}

.auto-grid {
  --min-column-size: 225px;

  display: grid;
  gap: clamp(1rem, 5vmax, 1.625rem);
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(100%, var(--min-column-size)), 1fr)
  );
}

.wrapper {
  --max-width: 55rem;
  width: min(100% - 2rem, var(--max-width));
  margin-inline: auto;
}

.card {
  padding: 1rem;
  background-color: var(--clr-card-bg);
  border-block-start: 0.5rem solid var(--clr-heading);
  border-radius: 0.5rem;
}

.card > * {
  margin: 0;
}

.card > *:not(:last-child) {
  margin-bottom: 0.75rem;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}
.color-picker {
  view-transition-name: match-element;
}
.color-picker > fieldset {
  display: grid;
  gap: 1.5rem;
  grid: 1.5em / 1.5em 1.5em 1.5em;
  padding: 0.5rem 1rem;
  margin-inline: auto;
  width: min-content;
  border: 0;
  background: canvas;
  border-radius: 100vmax;
}

input[type="radio"] {
  opacity: 0;
  pointer-events: none;
  position: fixed;
}
label {
  position: relative;
  padding: 6px;
  isolation: isolate;
  display: content;
  display: grid;
  place-items: center;
  &::before {
    position: absolute;
    background-color: var(--clr-text);
    border-radius: 100%;
    z-index: -1;
    inset: 0px;
  }
}
label:has(+ input:checked) {
  color: var(--clr-card-bg);
  &::before {
    content: "";
  }
}