[data-theme="dark"] {
  --base-color: #000;
  --text-color: #fff;
  /* ... */
}

[data-theme="light"] {
  --base-color: #fff;
  --text-color: #222;
  /* ... */
}

:root {
  --sp: 5s;
  --burger-thickness: 4px;
  --navigation__transition: max-height 0.5s ease-in-out, opacity 0.3s ease-in-out;
  --gradient: linear-gradient(45deg, #3392ffa4, #6bdfff00, #8f88bb, #e3e4fa);
  --shadow: 0 30px 100px rgba(148, 151, 189, 0.966);

  /* Step 0: 18px → 20px */
  --step-0: clamp(1.125rem, 1.0855rem + 0.1754cqi, 1.25rem);
  /* Step 1: 21.6px → 26.66px */
  --step-1: clamp(1.35rem, 1.2501rem + 0.4439cqi, 1.6663rem);
  /* Step 2: 25.92px → 35.5378px */
  --step-2: clamp(1.62rem, 1.4302rem + 0.8437cqi, 2.2211rem);
  /* Step 3: 31.104px → 47.3719px */
  --step-3: clamp(1.944rem, 1.6229rem + 1.427cqi, 2.9607rem);
  /* Step 4: 37.3248px → 63.1467px */
  --step-4: clamp(2.3328rem, 1.8232rem + 2.2651cqi, 3.9467rem);

  /* Space 6xs: 2px → 2px */
  --space-6xs: clamp(0.125rem, 0.125rem + 0cqi, 0.125rem);
  /* Space 5xs: 3px → 3px */
  --space-5xs: clamp(0.1875rem, 0.1875rem + 0cqi, 0.1875rem);
  /* Space 4xs: 4px → 4px */
  --space-4xs: clamp(0.25rem, 0.25rem + 0cqi, 0.25rem);
  /* Space 3xs: 5px → 5px */
  --space-3xs: clamp(0.3125rem, 0.3125rem + 0cqi, 0.3125rem);
  /* Space 2xs: 9px → 10px */
  --space-2xs: clamp(0.5625rem, 0.5428rem + 0.0877cqi, 0.625rem);
  /* Space xs: 14px → 15px */
  --space-xs: clamp(0.875rem, 0.8553rem + 0.0877cqi, 0.9375rem);
  /* Space s: 18px → 20px */
  --space-s: clamp(1.125rem, 1.0855rem + 0.1754cqi, 1.25rem);
  /* Space m: 27px → 30px */
  --space-m: clamp(1.6875rem, 1.6283rem + 0.2632cqi, 1.875rem);
  /* Space l: 36px → 40px */
  --space-l: clamp(2.25rem, 2.1711rem + 0.3509cqi, 2.5rem);
  /* Space xl: 54px → 60px */
  --space-xl: clamp(3.375rem, 3.2566rem + 0.5263cqi, 3.75rem);
  /* Space 2xl: 72px → 80px */
  --space-2xl: clamp(4.5rem, 4.3421rem + 0.7018cqi, 5rem);
  /* Space 3xl: 108px → 120px */
  --space-3xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 4xl: 108px → 120px */
  --space-4xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 5xl: 108px → 120px */
  --space-5xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 6xl: 108px → 120px */
  --space-6xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 7xl: 108px → 120px */
  --space-7xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 8xl: 108px → 120px */
  --space-8xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 9xl: 108px → 120px */
  --space-9xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 10xl: 108px → 120px */
  --space-10xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 11xl: 108px → 120px */
  --space-11xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 12xl: 108px → 120px */
  --space-12xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);

  /* One-up pairs */
  /* Space 6xs-5xs: 2px → 3px */
  --space-6xs-5xs: clamp(0.125rem, 0.1053rem + 0.0877cqi, 0.1875rem);
  /* Space 5xs-4xs: 3px → 4px */
  --space-5xs-4xs: clamp(0.1875rem, 0.1678rem + 0.0877cqi, 0.25rem);
  /* Space 4xs-3xs: 4px → 5px */
  --space-4xs-3xs: clamp(0.25rem, 0.2303rem + 0.0877cqi, 0.3125rem);
  /* Space 3xs-2xs: 5px → 10px */
  --space-3xs-2xs: clamp(0.3125rem, 0.2138rem + 0.4386cqi, 0.625rem);
  /* Space 2xs-xs: 9px → 15px */
  --space-2xs-xs: clamp(0.5625rem, 0.4441rem + 0.5263cqi, 0.9375rem);
  /* Space xs-s: 14px → 20px */
  --space-xs-s: clamp(0.875rem, 0.7566rem + 0.5263cqi, 1.25rem);
  /* Space s-m: 18px → 30px */
  --space-s-m: clamp(1.125rem, 0.8882rem + 1.0526cqi, 1.875rem);
  /* Space m-l: 27px → 40px */
  --space-m-l: clamp(1.6875rem, 1.4309rem + 1.1404cqi, 2.5rem);
  /* Space l-xl: 36px → 60px */
  --space-l-xl: clamp(2.25rem, 1.7763rem + 2.1053cqi, 3.75rem);
  /* Space xl-2xl: 54px → 80px */
  --space-xl-2xl: clamp(3.375rem, 2.8618rem + 2.2807cqi, 5rem);
  /* Space 2xl-3xl: 72px → 120px */
  --space-2xl-3xl: clamp(4.5rem, 3.5526rem + 4.2105cqi, 7.5rem);
  /* Space 3xl-4xl: 108px → 120px */
  --space-3xl-4xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 4xl-5xl: 108px → 120px */
  --space-4xl-5xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 5xl-6xl: 108px → 120px */
  --space-5xl-6xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 6xl-7xl: 108px → 120px */
  --space-6xl-7xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 7xl-8xl: 108px → 120px */
  --space-7xl-8xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 8xl-9xl: 108px → 120px */
  --space-8xl-9xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 9xl-10xl: 108px → 120px */
  --space-9xl-10xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 10xl-11xl: 108px → 120px */
  --space-10xl-11xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);
  /* Space 11xl-12xl: 108px → 120px */
  --space-11xl-12xl: clamp(6.75rem, 6.5132rem + 1.0526cqi, 7.5rem);


  --pt-serif-regular: "PT Serif", serif;
  --pt-serif-italic: "PT Serif Italic", serif;
  --font-weight-1: 400;
  --font-style-1: italic;

  --ff-monoton-regular: "Monoton", sans-serif;
  --font-weight-regular: 400;
  --font-style-regular: normal;
  --btn-border-radius: 0.5rem;
  --navbar-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.1);

  /* global page padding variables */
  --page-pad-inline: var(--space-6xs);
  --page-pad-block: 0;
  --backround-transition: background-color 0.8s, color 0.8s;
  --letter-space-content: var(--space-6xs);
  --word-space-content: var(--space-5xs);
}

/* Hide the support message if view transitions are supported */

@supports (selector(::view-transition)) {
  .support.view-transition {
    display: none;
  }
}

.support {
  background-color: var(--clr-warn-1);
  border-inline-start: 0.5rem solid var(--clr-warn-2);
  color: var(--clr-warn-text);
  border-radius: 0.5rem;
  padding: 1em 2em;
}

::view-transition {
  background: #555;
}

::view-transition-image-pair(root) {
  perspective: 2500px;
  perspective-origin: center;
  transform-style: preserve-3d;
  transform-origin: 50% 50% 100vw;
  filter: drop-shadow(0px 0px 6px hsl(165deg 11% 3%)) drop-shadow(0px 0px 25px hsl(165deg 11% 3%/50%));
}

::view-transition-old(root),
::view-transition-new(root) {
  animation: 1.5s linear(0,
      0.324 9.1%,
      0.584 18.6%,
      0.782 28.6%,
      0.858 33.8%,
      0.92 39.2%,
      0.997 49.5%,
      1.021 55.1%,
      1.033 61%,
      1.035 71.7%,
      1);
  transform-style: preserve-3d;
  transform-origin: 50% 50% 0;
  /*   perspective: 800px; */
  transform: translateZ(-50vw) scale(var(--scale)) rotatey(var(--rotation)) translatez(50vw);
  backface-visibility: hidden;
}

::view-transition-old(root) {
  animation-name: reveal-out;
}

::view-transition-new(root) {
  animation-name: reveal-in;
}

@property --rotation {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

@property --scale {
  syntax: "<number>";
  inherits: false;
  initial-value: 1;
}

@keyframes reveal-in {
  from {
    --rotation: -90deg;
    animation-timing-function: ease-in-out;
  }

  15% {
    --scale: 0.8;
    --rotation: -90deg;
  }

  85% {
    --scale: 0.8;
    --rotation: 0deg;
    animation-timing-function: ease-in-out;
  }

  to {
    --rotation: 0deg;
  }
}

@keyframes reveal-out {
  from {
    --rotation: 0deg;
    animation-timing-function: ease-in-out;
  }

  15% {
    --scale: 0.8;
    --rotation: 0deg;
  }

  85% {
    --scale: 0.8;
    --rotation: 90deg;
    animation-timing-function: ease-in-out;
  }

  to {
    --rotation: 90deg;
  }
}


html,
body {
  font-family: var(--pt-serif-italic);
  font-weight: var(--font-weight-1);
  font-style: var(--font-style-1);
  color: var(--text-color);
  background-color: var(--base-color);
  text-align: center;
  margin-inline: auto;
  overflow: auto;
  padding: var(--page-pad-inline);
}

body>* {
  /* Ensure all direct children of body are treated as containers */
  container-type: inline-size;
}

.wrapper {
  margin-inline: auto;
  min-height: 100dvh;
  overflow: hidden;
  padding: var(--page-pad-inline);
}

header {
  display: flex;
  flex-direction: row;
}

.h {
  font-size: var(--step--1);
  color: var(--text-color);
  letter-spacing: var(--letter-space-content);
  user-select: none;
  /* Prevent text selection */
  white-space: nowrap;
  padding: var(--space-6xs) 0 var(--space-5xs) var(--space-s);
  /* Padding around the text */

}

.h span {
  letter-spacing: var(--letter-space-content);
  display: inline-block;
  /* Allows margin/padding */
  padding: 0 var(--space-6xs) 0 0;
}

.h span:first-of-type {
  color: var(--text-span);
  padding-left: 0;
  padding-right: var(--space-l);
}

.h span:last-of-type {
  color: var(--text-span);
  padding-left: 0;
  padding-right: var(--space-3xs);
}

header .bars {
  position: relative;
  height: 3px;
  width: 20px;
  border-radius: 2px;
  background-color: #888888;
  margin-left: var(--space-s);
  display: none;
  cursor: pointer;
  z-index: 2000;
  /* Ensure it's above the nav links */
}

header .bars.is-active {
  transform-origin: center;
  padding: 0 var(--space-xs) 0 var(--space-2xs);
  transition: transform 0.5s ease-in-out;
  transform: rotate(45deg);
  cursor: pointer;
  z-index: 2000;
  /* Ensure it's above the nav links */
}

header .bars::after,
header .bars::before {
  position: absolute;
  content: "";
  height: 3px;
  left: 0;
  width: 20px;
  border-radius: 2px;
  background: #888888;
  cursor: pointer;
}

header .bars::after {
  bottom: 7px;
}

header .bars::before {
  top: 7px;
}

.nav-links {
  @media (hover) and (prefers-reduced-motion: no-preference) {
    &>li {
      transform-origin: left center;
      transition:
        transform 1s var(--ease-spring-3),
        opacity .3s var(--ease-3);
    }

    &:hover>li:not(:hover) {
      opacity: .25;
      transform: scale(0.8);
    }
  }
}

.nav {
  margin: auto;
  /* Push nav to the right */
  display: flex;
  align-items: center;
  position: relative;
}

.nav-links {
  display: flex;
  flex-direction: row;
  gap: var(--space-m);
  list-style: none;
}

.nav-links li {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.nav-links li a {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-decoration: none;
}

.nav-links li a span {
  font-size: var(--step--1);
  letter-spacing: var(--space-3xs);
  margin-top: var(--space-3xs);
}

.nav-links li svg {
  height: var(--space-l);
  width: var(--space-l);
  object-fit: cover;
  border-radius: 50%;
  margin-inline: auto;
}

/* Keep .link label on one line */
.dropdown {
  cursor: pointer;
  pointer-events: all;
  z-index: 1000;
  position: absolute;
  right: var(--space-l);
  top: var(--space-2xs);
  box-shadow: 0 20px 5px 20px rgba(0, 0, 0, 0);
  opacity: 1;
  transition: box-shadow 0.3s;
  user-select: none;
  /*transition: color 0.8s, box-shadow 0.9s;*/
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
}

.link {
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
  cursor: pointer;
  pointer-events: all;
  display: flex;
  flex-direction: row;
  justify-content: center;
  text-decoration: none;
  background-color: var(--base-color);
  color: var(--text-color);
  user-select: none;
  position: relative;
  /*transition: color 0.8s, box-shadow 0.9s;*/
  transform: none;
  z-index: 1000;
  opacity: 1;
  transition: box-shadow 0.3s;
  box-shadow: var(--shadow);
}

.link label {
  display: flex;
  flex-direction: row;
  cursor: pointer;
  pointer-events: all;
  position: relative;
  z-index: 1000;
  padding: var(--space-5xs);
  opacity: 1;
  gap: var(--space-xs);
  align-items: center;
  text-decoration: none;
  background-color: transparent;
  color: var(--text-color);
  transition: box-shadow 0.3s;
  box-shadow: var(--shadow);
  font-size: var(--step--1);
  user-select: none;
  white-space: nowrap;
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
}

.link svg {
  width: var(--space-l);
  height: var(--space-l);
  vertical-align: middle;
  color: var(--text-color);
  background-color: var(--base-color);
  opacity: 1;
  display: inline-block;
}

.link span {
  white-space: nowrap;
  overflow: hidden;
  user-select: none;
  display: inline-block;
  vertical-align: middle;
  padding: var(--space-5xs) var(--space-s);
  background-color: var(--base-color);
  transition: box-shadow 0.3s, outline 0.3s;
  box-shadow: var(--shadow);
  /* optional: adds ... if text is too long */
}

link:hover,
link:focus {
  color: var(--text-color);
  padding: var(--space-5xs);
  background-color: var(--base-color);
  transition: color 0.3s, box-shadow 0.1s, background-color 0.3s;
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
  outline: none;
  /* Optional: adds a subtle outline on hover/focus */
  box-shadow: 0 10px 10px var(--space-s) var(--shadow);
}

/* Initial hidden state */
.color-picker.dropdown-menu {
  opacity: 0;
  transform: translateX(150px);
  pointer-events: none;
  padding: 0 var(--space-m);
  gap: var(--space-s);
  background-color: var(--base-color);
  color: var(--text-color);
  border-radius: var(--btn-border-radius);
  box-shadow: var(--navbar-shadow);
  position: absolute;
  top: var(--space-xl);
  right: 0;
  display: flex;
  flex-direction: column;
  z-index: 1000;
  user-select: none;
  transition:
    opacity 0.7s cubic-bezier(.22, .61, .36, 1),
    transform 0.7s cubic-bezier(.22, .61, .36, 1);
  /* Remove keyframes from transition */
}

/* When menu is open, show it */
.dropdown.active>.color-picker.dropdown-menu {
  margin-top: var(--space-l);
  opacity: 1;
  pointer-events: all;
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
}

/* Animation class for sliding in */
.color-picker.dropdown-menu.animate-in {
  animation: colorPickerSlide 0.7s cubic-bezier(.22, .61, .36, .1) ease-in forwards;
}

@keyframes colorPickerSlide {
  0% {
    transform: translateX(0px);
    opacity: 0;
  }

  30% {
    opacity: 1;
    transform: translateX(0px);
  }

  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}

/* Theme list styles remain unchanged */
.theme-list {
  list-style: none;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1000;
  pointer-events: all;
  gap: var(--space-2xs);
  align-items: center;
  text-decoration: none;
  background-color: var(--base-color);
  color: var(--text-color);
  font-size: var(--step--1);
  user-select: none;
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
  padding: var(--space-3xs) var(--space-m);
  box-shadow: 0 20px 5px 20px rgba(0, 0, 0, 0);
  opacity: 1;
  transition: box-shadow 0.3s, background-color 0.3s, color 0.3s;
}

.theme-list-item {
  cursor: pointer;
  pointer-events: all;
  display: flex;
  flex-direction: row;
  position: relative;
  z-index: 1000;
  padding: var(--space-3xs) var(--space-m);
  box-shadow: 0 20px 5px 20px rgba(0, 0, 0, 0);
  opacity: 1;
  transition: box-shadow 0.3s, background-color 0.3s, color 0.3s;
  gap: var(--space-s);
  align-items: center;
  text-decoration: none;
  background-color: var(--base-color);
  color: var(--text-color);

  font-size: var(--step--1);
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
  user-select: none;
}

/* Highlight SVG for the active (checked) theme item */
.theme-list-item input[type="radio"]:checked+label svg {
  margin-right: var(--space-m);
  padding: var(--space-3xs) var(--space-m);
  color: var(--text-span);
  /* Example: change color to indicate active state */
  background-color: var(--base-color);
  border-radius: 50%;
  box-shadow: 0 0 10px var(--text-span);
  opacity: 1;
  transition: color 0.3s, box-shadow 0.3s, border 0.3s;
  /* You can add more styles for active state if needed */
}

/* Style SVGs inside theme-list items */
.theme-list-item label svg {
  width: var(--space-xl);
  height: var(--space-xl);
  margin-right: var(--space-m);
  vertical-align: middle;
  color: var(--text-color);
  background-color: var(--base-color);
  opacity: 1;
  display: inline-block;
}

.theme-list-item label {
  display: flex;
  flex-direction: row;
  cursor: pointer;
  pointer-events: all;
  position: relative;
  z-index: 1000;
  padding: 0 var(--space-s);
  gap: var(--space-s);
  align-items: center;
  text-decoration: none;
  background-color: var(--base-color);
  color: var(--text-color);
  box-shadow: var(--shadow);
  font-size: var(--step--1);
  border: 2px solid transparent;
  border-radius: var(--btn-border-radius);
  user-select: none;
  transition: color 0.3s, box-shadow 0.3s;
}

.theme-list-item span {
  margin-left: var(--space-3xs);
  padding: var(--space-2xs) 0;
}


label:hover,
label:focus {
  color: var(--text-span);
  box-shadow: 0 10px 10px var(--space-s) var(--shadow);

}

/* Ensure the dropdown menu is visible when active */
.dropdown-menu {
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
  z-index: 1000;
}

.dropdown.active>.dropdown-menu {
  opacity: 1;
  pointer-events: all;
}

input:checked {
  padding: var(--space-3xs) var(--space-xs);
  box-shadow: 0 20px 5px 20px rgba(0, 0, 0, 0);
  opacity: 1;
  transition: box-shadow 0.3s, background-color 0.3s, color 0.3s;
  color: var(--text-color);

  &svg {
    color: var(--text-span);
  }
}

input[type="radio"] {
  opacity: 0;
  position: absolute;
  width: var(--space-s);
  height: var(--space-s);
  pointer-events: none;
}



.intro {
  padding-top: var(--space-xl);
  text-align: center;
  margin-bottom: var(--space-2xl);
}

.intro p {
  font-size: var(--step--1);
  text-wrap: balance;
  overflow-wrap: break-word;
  word-wrap: break-word;
}

.intro p span {
  color: var(--text-span);
  font-size: var(--step-0);
  padding: 0 var(--space-3xs);
}

.intro .ya {
  color: var(--text-span);
  font-size: var(--step-0);
  letter-spacing: var(--space-6xs);
  margin-block: var(--space-4xs);
}

.intro .ya-1 {
  color: var(--text-color);
  font-size: var(--step-1);
  letter-spacing: var(--space-6xs);
  margin-block: var(--space-s);
}

.wrapper-gradient-text {
  font-size: var(--step-1);
  margin: 0;
  /* Remove default margins */
  padding: 0;
  /* Remove default padding */
  text-align: center;
  /* Align text to the left */
  text-shadow: 0px 0px 0px rgb(255, 255, 255);
}

.text-layer {
  background: linear-gradient(0deg,
      rgb(213, 223, 230),
      rgb(78, 115, 136),
      rgba(65, 90, 105, 0.6),
      rgba(159, 189, 206, 0.534));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  animation: shadowDrip 3s infinite alternate ease-in-out;
  text-shadow: 0px 15px 0px rgba(255, 255, 255, 0.853);
}

@keyframes shadowDrip {
  0% {
    text-shadow: 0px 0px 0px var(--shadow-color, rgba(255, 255, 255, 0.853));
  }

  100% {
    text-shadow:
      0px 5px 10px var(--shadow-color, rgba(255, 255, 255, 0.853)),
      0px 15px 20px var(--shadow-color2, rgb(255, 255, 255)),
      0px 25px 5px var(--shadow-color3, rgb(232, 235, 238));
  }
}

/* Optional: responsive tweak */
@container (min-width: 600px) {
  :root {
    --letter-space-content: var(--space-6xs);
    --word-space-content: var(--space-5xs);
  }
}

@container (max-width: 600px) {
  .dropdown-menu {
    position: absolute;
    top: var(--space-xs);
    right: var(--space-xs);
    z-index: 2000;
  }

  header .bars {
    display: block;
    transition: 0.5s;
    margin: var(--space-2xs) 0 0 0;
  }

  header .bars.is-active {
    transform: rotate(45deg);
    transition: 0.5s;
    margin: var(--space-2xs) 0 0 0;
  }

  nav {
    justify-content: flex-end;
    padding: var(--space-3xs) var(--space-s) 0 0;
  }

  .nav-links {
    background: var(--base-color);
    display: flex;
    justify-content: center;
    position: fixed;
    top: 7%;
    left: 0;
    flex-direction: column;
    height: 100dvh;
    width: 100%;
    pointer-events: none;
    transition: 0.5s;
    opacity: 0;
  }

  .nav-links.open {
    opacity: 1;
    pointer-events: auto;
    content: "";
    width: 100dvw;
    height: 100dvh;
    position: fixed;
    top: 0;
    left: 0;
    background:
      linear-gradient(to bottom,
        var(--body-gradient-bottom) 0%,
        var(--body-gradient-top) 100%),
      linear-gradient(90deg,
        var(--body-grid-line)0 1px,
        transparent 1px 30px) 100% 100% / 30px 30px,
      linear-gradient(180deg,
        var(--body-grid-line)0 1px,
        transparent 1px 30px) 100% 100% / 30px 30px;
    transform-style: preserve-3d;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out,
      background-position 0.3s ease-in-out;
    z-index: -1;
    overflow: hidden;
    --navigation__transition: max-height 0.5s ease-in-out, opacity 0.3s ease-in-out;
  }

  .nav-links li {
    color: var(--text-color);
    transform: translateY(40px);
    opacity: 0;
    transition: transform 0.4s cubic-bezier(.4, 0, .2, 1), opacity 0.4s cubic-bezier(.4, 0, .2, 1);
  }

  .nav-links.open li {
    color: var(--text-color);
    transform: translateY(0);
    opacity: 1;
    transition-delay: calc(.3s * var(--i));
    /* Apply delay only when open */
  }

  .header {
    padding: var(--space-2xs) var(--space-s) 0 var(--space-s);
  }

  .intro {
    min-height: 100dvh;
    margin-top: var(--space-4xl);
  }
}




/* -----------code for   fancy li's---------------------------- */
/* -----------code for   fancy li's---------------------------- */
/* -----------code for   fancy li's---------------------------- */
/* -----------code for   fancy li's---------------------------- *
@import "https://unpkg.com/open-props/easings.min.css" layer(support.demo);

/* 
  creates focus not by highlighting or promoting 
  but by demoting what isn't being shown interest
*
ul {
  @media (hover) and (prefers-reduced-motion: no-preference) {
    &>li {
      transform-origin: left center;
      transition:
        transform 1s var(--ease-spring-3),
        opacity .3s var(--ease-3);
    }

    &:hover>li:not(:hover) {
      opacity: .25;
      transform: scale(0.8);
    }
  }
}




@layer support.demo {
  * {
    box-sizing: border-box;
    margin: 0;
  }

  html {
    block-size: 100%;
    color-scheme: dark light;
  }

  body {
    min-block-size: 100%;
    font-family: system-ui, sans-serif;

    display: grid;
    place-content: center;
  }

  ul {
    font-size: 2rem;
    font-weight: 200;
  }
}